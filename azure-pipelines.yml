# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:
- job: UnitTest
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.5'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip && pip install tox
    displayName: 'Install dependencies'

  - script: python -m tox -e pywin-unit
    displayName: 'Run unit tests'

- job: PostgresIntegrationTest
  pool:
    vmImage: 'win1803'
  dependsOn: UnitTest

  steps:
  # the vmImage that can run docker containers can't use `UsePythonVersion`...
  - script: |
      choco install python3 --version 3.5.4
      refreshenv
      python -m pip install --upgrade pip && pip install tox
    displayName: Install python 3.5 and dependencies

  # TODO: once this works, move it to be first
  - task: Docker@1
    inputs:
      command: Run
      imageName: stellirin/postgres-windows
      qualifyImageName: false
      containerName: database
      envVars: |
        POSTGRES_USER=root
        POSTGRES_PASSWORD=password
        POSTGRES_DB=dbt
      runInBackground: true

  - bash: test/setup_db.sh

  - script: python -m tox -e pywin-postgres

- job: AdapterIntegrationTest
  pool:
    vmImage: 'vs2017-win2016'
  dependsOn: PostgresIntegrationTest
  strategy:
    matrix:
      Snowflake:
        tox.target: pywin-snowflake
      Bigquery:
        tox.target: pywin-bigquery
      Redshift:
        tox.target: pywin-redshift
    maxParallel: 4

  steps:

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.5'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip && pip install tox
    displayName: 'Install dependencies'

  - script: python -m tox -e $(tox.target)
